{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./Cameras/index.js","webpack:///./Cameras/modules/Camera2d.js","webpack:///./Core/index.js","webpack:///./Core/modules/Engine.js","webpack:///./Core/modules/Event.js","webpack:///./Core/modules/Events.js","webpack:///./Core/modules/Loader.js","webpack:///./DOM/index.js","webpack:///./DOM/modules/Display.js","webpack:///./GameObjects/index.js","webpack:///./GameObjects/modules/Sprite.js","webpack:///./Load/index.js","webpack:///./Load/modules/File.js","webpack:///./Network/index.js","webpack:///./Network/modules/Client.js","webpack:///./Network/modules/Server.js","webpack:///./Scenes/index.js","webpack:///./Scenes/modules/Manager.js","webpack:///./Scenes/modules/Scene.js","webpack:///./Stored/index.js","webpack:///./Stored/modules/Number.js","webpack:///./Time/index.js","webpack:///./Time/modules/Event.js","webpack:///./Time/modules/Loop.js","webpack:///./Time/modules/Manager.js","webpack:///./Utils/index.js","webpack:///./Utils/modules/List.js","webpack:///./hoot.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;AClBA;AACA,cAAc,mBAAO,CAAC,yDAAoB;AAC1C;;AAEA,yB;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;;AClDA;AACA,YAAY,mBAAO,CAAC,kDAAkB;AACtC,WAAW,mBAAO,CAAC,gDAAiB;AACpC,YAAY,mBAAO,CAAC,kDAAkB;AACtC,YAAY,mBAAO,CAAC,kDAAkB;AACtC;;AAEA;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,+DAA+D;AAC/D;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE,aAAa;;AAEb;AACA;AACA,aAAa;AACb,SAAS;;;AAGT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;AC/GA;AACA;AACA,0BAA0B,kBAAkB;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,wB;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,+BAA+B;AACxF,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;ACnFA;AACA,aAAa,mBAAO,CAAC,mDAAmB;AACxC;;AAEA,qB;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,oDAAoD,gBAAgB;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxEA;AACA,YAAY,mBAAO,CAAC,yDAAkB;AACtC;;AAEA,6B;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;;AC/BA;AACA,UAAU,mBAAO,CAAC,8CAAgB;AAClC;;AAEA,sB;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0EAA0E,aAAa;AACvF,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,sB;;;;;;;;;;;;ACtDA;AACA,YAAY,mBAAO,CAAC,qDAAkB;AACtC,YAAY,mBAAO,CAAC,qDAAkB;AACtC;;AAEA,yB;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,qCAAqC,qBAAqB;;AAE1D;AACA;AACA;;AAEA,wB;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;;ACtCA;AACA,WAAW,mBAAO,CAAC,kDAAiB;AACpC,aAAa,mBAAO,CAAC,sDAAmB;AACxC;;AAEA,wB;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B,kCAAkC;AAClC,iCAAiC;AACjC,+BAA+B;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAA6D,iDAAiD;;AAE9G;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;ACtDA;AACA,YAAY,mBAAO,CAAC,oDAAkB;AACtC;;AAEA,wB;;;;;;;;;;;;ACJA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;;ACnCA;AACA,WAAW,mBAAO,CAAC,gDAAiB;AACpC,UAAU,mBAAO,CAAC,8CAAgB;AAClC,aAAa,mBAAO,CAAC,oDAAmB;AACxC;;AAEA,sB;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yB;;;;;;;;;;;;ACnCA;AACA,UAAU,mBAAO,CAAC,+CAAgB;AAClC;;AAEA,uB;;;;;;;;;;;;ACJA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sB;;;;;;;;;;;;ACtCA;AACA,aAAa,mBAAO,CAAC,qCAAW;AAChC,UAAU,mBAAO,CAAC,+BAAQ;AAC1B,SAAS,mBAAO,CAAC,6BAAO;AACxB,iBAAiB,mBAAO,CAAC,6CAAe;AACxC,UAAU,mBAAO,CAAC,+BAAQ;AAC1B,aAAa,mBAAO,CAAC,qCAAW;AAChC,YAAY,mBAAO,CAAC,mCAAU;AAC9B,YAAY,mBAAO,CAAC,mCAAU;AAC9B,UAAU,mBAAO,CAAC,+BAAQ;AAC1B,WAAW,mBAAO,CAAC,iCAAS;AAC5B;;AAEA;AACA,mB","file":"hoot.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Hoot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Hoot\"] = factory();\n\telse\n\t\troot[\"Hoot\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./hoot.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\r\nconst Cameras = {\r\n    Camera2d: require(\"./modules/Camera2d\")\r\n};\r\n\r\nmodule.exports = Cameras;","\r\n\r\nclass Camera2d {\r\n    constructor(engine) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.perspective = {\r\n            x: 0,\r\n            y: 0,\r\n            width: 960,\r\n            height: 720\r\n        };\r\n\r\n        if (this.hasEngine) {\r\n            this.perspective.width = this.engine.getDisplay().getWidth();\r\n            this.perspective.height = this.engine.getDisplay().getHeight();\r\n        }\r\n\r\n        this.target = target;\r\n\r\n        this.rendered = new Hoot.Utils.List();\r\n    }\r\n\r\n    setTarget(target) {\r\n        if (!(target instanceof Hoot.GameObjects.Sprite)) {\r\n            return false;\r\n        }\r\n        this.target = target;\r\n    }\r\n\r\n    add(gameObject) {\r\n        if (!(gameObject instanceof Hoot.GameObjects)) {\r\n            return false;\r\n        }\r\n\r\n        this.rendered.add(gameObject);\r\n    }\r\n\r\n    tick() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = Camera2d;","\r\nconst Core = {\r\n    Engine: require(\"./modules/Engine\"),\r\n    Event: require(\"./modules/Event\"),\r\n    Events: require(\"./modules/Events\"),\r\n    Loader: require(\"./modules/Loader\")\r\n};\r\n\r\nmodule.exports = Core;\r\n\r\n","\r\n\r\nclass Engine {\r\n    constructor(config) {\r\n        this.config = null;\r\n        if (typeof config === \"string\") {\r\n            let xhttp = new XMLHttpRequest();\r\n            xhttp.onload = function() {\r\n                this.config = this.fixConfig(JSON.parse(xhttp.responseText));\r\n                new Hoot.Core.Event(\"hoot-engine-config-loaded\", {}).dispatch();\r\n            }.bind(this);\r\n            xhttp.open(\"GET\", config);\r\n            xhttp.send(null);\r\n        }else {\r\n            this.config = this.fixConfig(config);\r\n            new Hoot.Core.Event(\"hoot-engine-config-loaded\", {}).dispatch();\r\n        }\r\n\r\n        this.display = null;\r\n        Hoot.Core.Events.addListener(\"hoot-engine-config-loaded\", function(event) {\r\n            Hoot.Core.Events.addListener(\"hoot-display-loaded\", function(event2) {\r\n                this.display = event2.display;\r\n                new Hoot.Core.Event(\"hoot-loaded\", { engine: this }).dispatch();\r\n            }, this);\r\n\r\n            this.display = new Hoot.DOM.Display(this, this.config.parent, this.config.width, this.config.height, {\r\n                smoothingEnabled: this.config.renderer.smoothingEnabled\r\n            });\r\n        }, this);\r\n\r\n\r\n        this.loader = new Hoot.Core.Loader(this);\r\n        this.time = new Hoot.Time.Manager(this);\r\n        this.scene = new Hoot.Scenes.Manager(this);\r\n\r\n    }\r\n\r\n    fixConfig(config) {\r\n        if (typeof config !== \"object\") {\r\n            config = {\r\n                title: \"\",\r\n                author: \"\",\r\n                version: \"1.0.0\",\r\n                description: \"\",\r\n                parent: \"\",\r\n                scale: {\r\n                    width: 960,\r\n                    height: 720,\r\n                    mode: \"DEFAULT\"\r\n                },\r\n                renderer: {\r\n                    smoothing: true\r\n                }\r\n            };\r\n        }else {\r\n            // TODO Put all configuration values that will need to be set and FIXED here!\r\n            if (typeof config.title !== \"string\") {\r\n                config.title = \"\";\r\n            }\r\n            if (typeof config.author !== \"string\") {\r\n                config.author = \"\";\r\n            }\r\n            if (typeof config.version !== \"string\") {\r\n                config.version = \"1.0.0\";\r\n            }\r\n            if (typeof config.description !== \"string\") {\r\n                config.description = \"\";\r\n            }\r\n            if (typeof config.parent !== \"string\") {\r\n                config.parent = \"\";\r\n            }\r\n            if (typeof config.scale !== \"object\") {\r\n                config.scale = {\r\n                    width: 960,\r\n                    height: 720,\r\n                    mode: \"DEFAULT\"\r\n                };\r\n            } else {\r\n                if (typeof config.scale.width !== \"number\") {\r\n                    config.scale.width = 960;\r\n                }\r\n                if (typeof config.scale.height !== \"number\") {\r\n                    config.scale.height = 720;\r\n                }\r\n                if (typeof config.scale.mode !== \"string\") {\r\n                    config.scale.mode = \"DEFAULT\";\r\n                }\r\n            }\r\n            if (typeof config.renderer !== \"object\") {\r\n                config.renderer = {\r\n                    smoothingEnabled: true\r\n                };\r\n            } else {\r\n                if (typeof config.renderer.smoothingEnabled !== \"boolean\") {\r\n                    config.renderer.smoothingEnabled = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return config;\r\n    }\r\n\r\n\r\n    getDisplay() {\r\n        return this.display;\r\n    }\r\n\r\n    getLoader() {\r\n        return this.loader;\r\n    }\r\n}\r\n\r\nmodule.exports = Engine;","\r\nclass Event extends CustomEvent {\r\n    constructor(eventName, options) {\r\n        super(eventName, { detail: options });\r\n\r\n        this.name = eventName;\r\n        this.options = options;\r\n    }\r\n\r\n    dispatch() {\r\n        document.dispatchEvent(this);\r\n    }\r\n}\r\n\r\nmodule.exports = Event;","\r\nclass Events {\r\n    static addListener(eventName, callback, callbackScope) {\r\n        if (typeof eventName !== \"string\") {\r\n            console.error(\"Hoot: Could not add event listener with 'eventName' of undefined!\");\r\n            return false;\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            console.error(\"Hoot: There is no event listener's 'callback'\");\r\n            return false;\r\n        }\r\n        if (typeof callbackScope === \"undefined\") {\r\n            callbackScope = null;\r\n        }\r\n        let callback2 = callback.bind(callbackScope);\r\n        document.addEventListener(eventName, function(event) {\r\n            callback2(event.detail);\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Events;","\r\nclass Loader {\r\n    constructor(engine) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.status = \"WAITING\";\r\n\r\n        this.queue = new Hoot.Utils.List();\r\n        this.loading = null;\r\n        this.loaded = new Hoot.Utils.List();\r\n\r\n        this.canUse = false;\r\n        this.alreadyLoaded = false;\r\n\r\n        Hoot.Core.Events.addListener(\"hoot-loader-add-callback\", function(event) {\r\n            this.preload(event.callback, event.caller);\r\n        }, this);\r\n    }\r\n\r\n    preload(callback, caller) {\r\n        if (typeof callback !== \"function\") {\r\n            return false;\r\n        }\r\n\r\n        callback.call(this);\r\n\r\n        this.start(caller);\r\n    }\r\n\r\n    load(file) {\r\n        if (!file instanceof Hoot.Load.File) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.alreadLoaded) {\r\n            this.queue.add(file);\r\n        }\r\n    }\r\n\r\n    start(caller) {\r\n        if (this.queue.length <= 0) {\r\n            console.log(\"Hoot: Loader Complete\");\r\n            this.status = \"COMPLETE\";\r\n            this.canUse = true;\r\n            this.alreadyLoaded = true;\r\n\r\n            new Hoot.Core.Event(\"hoot-loader-complete\", { caller: caller, loader: this }).dispatch();\r\n        }else if (this.queue.length >= 1) {\r\n            this.status = \"LOADING\";\r\n\r\n            this.loading = this.queue.get(\"last\");\r\n            this.queue.remove(\"last\");\r\n\r\n            this.loading.load();\r\n\r\n            Hoot.Core.Events.addListener(\"hoot-loader-file-complete\", function(event) {\r\n                if (event.file === this.loading) {\r\n                    this.loading = null;\r\n\r\n                    this.loaded.add(event.file);\r\n\r\n                    this.start();\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    get(key) {\r\n        if (typeof key !== \"string\") {\r\n            return false;\r\n        }\r\n\r\n        for (let i in this.loaded.array) {\r\n            if (this.loaded.array[i].key === key) {\r\n                return this.loaded.get(i).data;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Loader;","\r\nconst DOM = {\r\n    Display: require(\"./modules/Display\")\r\n};\r\n\r\nmodule.exports = DOM;","\r\n\r\nclass Display {\r\n    constructor(engine, parent, width, height, options) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.parent = parent || null;\r\n        this.options = options || {};\r\n\r\n        this.size = {\r\n            width: width || 960,\r\n            height: height || 720\r\n        };\r\n\r\n        this.scale = {\r\n            x: 1,\r\n            y: 1\r\n        };\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n        if (document.readyState === \"complete\") {\r\n            this.init();\r\n        }else {\r\n            window.onload = function() {\r\n                this.init();\r\n            }.bind(this);\r\n        }\r\n\r\n    }\r\n\r\n    init() {\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = this.size.width;\r\n        this.canvas.height = this.size.height;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        this.context.translate(0.5, 0.5);\r\n        this.context.scale(this.scale.x, this.scale.y);\r\n\r\n        if (typeof this.options.smoothingEnabled === \"boolean\") {\r\n            this.context.imageSmoothingEnabled = this.options.smoothingEnabled;\r\n        }\r\n\r\n        if (typeof this.parent !== \"string\") {\r\n            document.body.appendChild(this.canvas);\r\n        }else {\r\n            document.getElementById(this.parent).appendChild(this.canvas);\r\n        }\r\n\r\n        new Hoot.Core.Event(\"hoot-display-loaded\", { display: this }).dispatch();\r\n    }\r\n\r\n    getWidth() {\r\n        return this.size.width;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.size.height;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.canvas;\r\n    }\r\n\r\n    getContext() {\r\n        return this.context;\r\n    }\r\n}\r\n\r\nmodule.exports = Display;\r\n","\r\nconst GameObjects = {\r\n    Sprite: require(\"./modules/Sprite\")\r\n};\r\n\r\nmodule.exports = GameObjects;","\r\n\r\nclass Sprite {\r\n    constructor(engine, x, y, texture, frame) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.position = {\r\n            x: x,\r\n            y: y\r\n        };\r\n\r\n        this.texture = texture;\r\n        this.frame = frame;\r\n\r\n        this.scroll = {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n    tick() {\r\n\r\n    }\r\n\r\n    render() {\r\n        this.engine.getDisplay().getContext().drawImage(this.texture.data, this.scroll.x, this.scroll.y, this.texture.data.width, this.texture.data.height);\r\n    }\r\n}\r\n\r\nmodule.exports = Sprite;","\r\n\r\nconst Load = {\r\n    File: require(\"./modules/File\")\r\n};\r\n\r\nmodule.exports = Load;","\r\n\r\nclass File {\r\n    constructor(key, path, options) {\r\n        this.key = key || \"\";\r\n        this.path = path || \"\";\r\n        this.options = options || {};\r\n\r\n        this.extension = this.path.split(\".\").pop();\r\n        this.type = null;\r\n\r\n        this.data = null;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (this.extension === \"png\" || this.extension === \"jpg\" || this.extension === \"jpeg\") {\r\n            this.type = \"image\";\r\n        }else if (this.extension === \"mp3\" || this.extension === \"wav\" || this.extension === \"ogg\") {\r\n            this.type = \"audio\";\r\n        }else if (this.extension === \"js\") {\r\n            this.type = \"script\";\r\n        }else {\r\n            this.type = \"unknown\";\r\n        }\r\n    }\r\n\r\n    load() {\r\n        this.data = new Image();\r\n        this.data.src = this.path;\r\n\r\n        this.data.onload = function() {\r\n            let event = new Hoot.Core.Event(\"hoot-loader-file-complete\", { file: this }).dispatch();\r\n        }.bind(this);\r\n    }\r\n\r\n    on(eventName, callback, callbackScope) {\r\n        if (typeof eventName !== \"string\") {\r\n            return false;\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return false;\r\n        }\r\n        const callback2 = callback.bind(callbackScope || null);\r\n        if (eventName === \"complete\") {\r\n            Hoot.Core.Events.addListener(\"hoot-loader-file-complete\", function(event) {\r\n                if (event.data === this) {\r\n                    callback2();\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = File;","\r\nconst Network = {\r\n    Server: require(\"./modules/Server\"),\r\n    Client: require(\"./modules/Client\")\r\n};\r\n\r\nmodule.exports = Network;","\r\nclass Client {\r\n    constructor(engine) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createAction(text) {\r\n        let data = new Blob([text], { type: 'text/plain' });\r\n\r\n        let textFile = window.URL.createObjectURL(data);\r\n    }\r\n}\r\n\r\nmodule.exports = Client;","\r\n\r\n\r\nclass Server {\r\n    constructor(engine, url) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.connectionTries = 3;\r\n        this.connectionTryDelay = 5000;\r\n\r\n        this.local = true;\r\n\r\n        this.url = url || \"localhost:8000\";\r\n\r\n        this.socket = false;\r\n        this.connect();\r\n\r\n        this.socket.addEventListener(\"error\", function(event) {\r\n            if (this.connectionTries > 0) {\r\n                this.connectionTries -= 1;\r\n\r\n                console.error(\"Hoot Server: Connection Failed - Retrying in \" + this.connectionTryDelay + \"ms\");\r\n\r\n                window.setTimeout(this.connect(), this.connectionTryDelay);\r\n            }else {\r\n                console.error(\"Hoot Server: Connection Failed\")\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    connect() {\r\n        this.socket = new WebSocket(this.url);\r\n        console.log(this.socket);\r\n    }\r\n}\r\n\r\nmodule.exports = Server;","\r\n\r\nconst Scenes = {\r\n    Scene: require(\"./modules/Scene\"),\r\n    Manager: require(\"./modules/Manager\")\r\n};\r\n\r\nmodule.exports = Scenes;","\r\nclass Manager {\r\n    constructor(engine) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.scenes = new Hoot.Utils.List();\r\n\r\n        this.current = {\r\n            scene: null\r\n        };\r\n    }\r\n\r\n    add(scene) {\r\n        if (!(scene instanceof Hoot.Scenes.Scene)) {\r\n            return false;\r\n        }\r\n\r\n        this.scenes.add(scene);\r\n    }\r\n\r\n    start(name) {\r\n        if (typeof key !== \"string\") {\r\n            if (this.scenes.length >= 1) {\r\n                name = this.scenes.get(0).name;\r\n            }else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (let i in this.scenes.array) {\r\n            if (this.scenes.get(i).name === name) {\r\n                this.scenes.get(i).start();\r\n\r\n                this.current.scene = this.scenes.get(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        for (let i in this.scenes.array) {\r\n            this.scenes.get(i).stop();\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Manager;","\r\nclass Scene {\r\n    constructor(engine, name, callbacks) {\r\n        this.engine = engine || null;\r\n        this.hasEngine = true;\r\n        if (this.engine === null) {\r\n            this.hasEngine = false;\r\n        }\r\n\r\n        this.callbacks = callbacks || {\r\n            init: function() {},\r\n            preload: function() {},\r\n            create: function() {},\r\n            tick: function() {},\r\n            render: function() {}\r\n        };\r\n\r\n        this.isRunning = false;\r\n    }\r\n\r\n    start(data) {\r\n        if (this.isRunning) {\r\n            return false;\r\n        }\r\n\r\n        if (this.hasEngine) {\r\n            this.callbacks.init(data);\r\n\r\n            new Hoot.Core.Event(\"hoot-loader-add-callback\", { callback: this.callbacks.preload, caller: this }).dispatch();\r\n\r\n            Hoot.Core.Events.addListener(\"hoot-loader-complete\", function(event) {\r\n                //if (event.caller === this) {\r\n                    this.callbacks.create(data);\r\n\r\n                    this.isRunning = true;\r\n\r\n                    this.engine.time.addAnimationFrameCallback(this.callbacks.tick(data), null);\r\n                    this.engine.time.addAnimationFrameCallback(this.callbacks.render(data), null);\r\n                //}\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (!this.isRunning) {\r\n            return false;\r\n        }\r\n\r\n        this.isRunning = false;\r\n\r\n        this.engine.time.removeAnimationFrameCallback(this.callbacks.tick, this.engine);\r\n        this.engine.time.removeAnimationFrameCallback(this.callbacks.render, this.engine);\r\n    }\r\n}\r\n\r\nmodule.exports = Scene;","\r\nconst Stored = {\r\n    Number: require(\"./modules/Number\")\r\n};\r\n\r\nmodule.exports = Stored;","\r\nclass Number {\r\n    constructor(name, value) {\r\n        this.name = name || \"hoot-unknown\";\r\n        this.value = value || 0;\r\n\r\n        if (this.exists()) {\r\n            this.value = this.get();\r\n        }else {\r\n            localStorage.setItem(this.name, this.value);\r\n        }\r\n    }\r\n\r\n    get() {\r\n        return localStorage.getItem(this.name);\r\n    }\r\n\r\n    set(value) {\r\n        if (typeof value !== \"number\") {\r\n            return false;\r\n        }\r\n\r\n        this.value = value || this.value;\r\n\r\n        localStorage.setItem(this.name, this.value);\r\n    }\r\n\r\n    exists() {\r\n        if (this.get() === null) {\r\n            return false;\r\n        }else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Number;","\r\nconst Time = {\r\n    Event: require(\"./modules/Event\"),\r\n    Loop: require(\"./modules/Loop\"),\r\n    Manager: require(\"./modules/Manager\")\r\n};\r\n\r\nmodule.exports = Time;","\r\nclass Event {\r\n    constructor(delay, callback, callbackScope, engine) {\r\n        if (typeof delay !== \"number\") {\r\n            delay = 1000;\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            callback = function() {};\r\n        }\r\n        this.delay = delay;\r\n        this.callback = callback.bind(callbackScope || null);\r\n        this.engine = engine || null;\r\n\r\n        this.data = null;\r\n        this.running = false;\r\n    }\r\n\r\n    start() {\r\n        if (this.running) {\r\n            return;\r\n        }\r\n\r\n        this.data = window.setTimeout(this.callback, this.delay);\r\n        this.running = true;\r\n    }\r\n\r\n    stop() {\r\n        if (!this.running) {\r\n            return;\r\n        }\r\n\r\n        window.clearTimeout(this.data);\r\n        this.data = null;\r\n        this.running = false;\r\n    }\r\n}\r\n\r\nmodule.exports = Event;","\r\nclass Loop {\r\n    constructor(delay, callback, callbackScope, autoStart, engine) {\r\n        if (typeof delay !== \"number\") {\r\n            delay = 1000;\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            callback = function() {};\r\n        }\r\n        if (typeof autoStart !== \"boolean\") {\r\n            autoStart = true;\r\n        }\r\n        this.delay = delay;\r\n        this.callback = callback.bind(callbackScope || null);\r\n        this.callbackScope = callbackScope || null;\r\n        this.engine = engine || null;\r\n\r\n        this.data = null;\r\n        this.running = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this.running) {\r\n            return;\r\n        }\r\n\r\n        this.data = window.setInterval(this.callback, this.delay);\r\n        this.running = true;\r\n    }\r\n\r\n    stop() {\r\n        if (!this.running) {\r\n            return;\r\n        }\r\n\r\n        window.clearInterval(this.data);\r\n        this.data = null;\r\n        this.running = false;\r\n    }\r\n}\r\n\r\nmodule.exports = Loop;","\r\nclass Manager {\r\n    constructor(engine) {\r\n\r\n        this.engine = engine || null;\r\n        if (this.engine === null) {\r\n            new Hoot.Core.Event(\"hoot-engine-handler-requestEngine\", { data: this }).dispatch();\r\n            this.hasEngine = false;\r\n        }else {\r\n            this.hasEngine = true;\r\n        }\r\n\r\n        this.animationFrameCallbacks = new Hoot.Utils.List();\r\n    }\r\n\r\n    addAnimationFrameCallback(callback) {\r\n        this.animationFrameCallbacks.add(callback);\r\n    }\r\n\r\n    removeAnimationFrameCallback(callback) {\r\n        for (let i in this.animationFrameCallbacks.array) {\r\n            if (this.animationFrameCallbacks.array[i] === callback) {\r\n                this.animationFrameCallbacks.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    animationFrame() {\r\n        for (let i in this.animationFrameCallbacks.array) {\r\n            this.animationFrameCallbacks.array[i].bind(null).call(null);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.animationFrame);\r\n    }\r\n}\r\n\r\nmodule.exports = Manager;","\r\nconst Utils = {\r\n    List: require(\"./modules/List\")\r\n};\r\n\r\nmodule.exports = Utils;","\r\nclass List {\r\n    constructor(array) {\r\n        this.array = array || [];\r\n\r\n        this.length = this.array.length;\r\n    }\r\n\r\n    add(value) {\r\n        this.array.push(value);\r\n\r\n        this.length = this.array.length;\r\n    }\r\n\r\n    remove(index) {\r\n        if (index === \"last\") {\r\n            index = (this.array.length - 1);\r\n        }\r\n        let array = this.array;\r\n        this.array = [];\r\n\r\n        for (let i in array) {\r\n            if (i != (index)) {\r\n                this.array.push(array[i]);\r\n            }\r\n        }\r\n\r\n        this.length = this.array.length;\r\n    }\r\n\r\n    get(index) {\r\n        if (index === \"last\") {\r\n            index = (this.array.length - 1);\r\n        }\r\n        return this.array[index];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = List;","\r\nconst Hoot = {\r\n    Cameras: require(\"./Cameras\"),\r\n    Core: require(\"./Core\"),\r\n    DOM: require(\"./DOM\"),\r\n    GameObjects: require(\"./GameObjects\"),\r\n    Load: require(\"./Load\"),\r\n    Network: require(\"./Network\"),\r\n    Scenes: require(\"./Scenes\"),\r\n    Stored: require(\"./Stored\"),\r\n    Time: require(\"./Time\"),\r\n    Utils: require(\"./Utils\")\r\n};\r\n\r\nmodule.exports = Hoot;\r\nglobal.Hoot = Hoot;"],"sourceRoot":""}